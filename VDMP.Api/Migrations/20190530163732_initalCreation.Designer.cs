// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDMP.DataAccess;

namespace VDMP.Api.Migrations
{
    [DbContext(typeof(VDMPContext))]
    [Migration("20190530163732_initalCreation")]
    partial class initalCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDMP.DBmodel.Library", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LibraryName")
                        .IsRequired();

                    b.Property<string>("LibraryType")
                        .IsRequired();

                    b.Property<string>("UserId");

                    b.HasKey("LibraryId");

                    b.HasIndex("UserId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("VDMP.DBmodel.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackdropImageSource");

                    b.Property<string>("BackdropPath");

                    b.Property<string>("FileName");

                    b.Property<string>("GridPosterImageSource");

                    b.Property<string>("Homepage");

                    b.Property<string>("ImdbId");

                    b.Property<string>("Language");

                    b.Property<int>("LibraryId");

                    b.Property<string>("OriginalTitle");

                    b.Property<string>("Overview");

                    b.Property<string>("PathToVideo");

                    b.Property<TimeSpan>("Playback");

                    b.Property<string>("PosterPath");

                    b.Property<int>("Rating");

                    b.Property<DateTimeOffset>("ReleaseDate");

                    b.Property<string>("Runtime");

                    b.Property<int>("TMDbId");

                    b.Property<string>("TagLine");

                    b.Property<string>("TitleOfMovie");

                    b.Property<long>("VoteAverage");

                    b.Property<int>("genre");

                    b.Property<int>("type");

                    b.HasKey("MovieId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("VDMP.DBmodel.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VDMP.DBmodel.Library", b =>
                {
                    b.HasOne("VDMP.DBmodel.User")
                        .WithMany("UserLibraries")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("VDMP.DBmodel.Movie", b =>
                {
                    b.HasOne("VDMP.DBmodel.Library")
                        .WithMany("LibraryOfMovies")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
